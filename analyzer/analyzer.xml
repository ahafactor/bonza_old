<?xml version="1.0" encoding="UTF-8" ?>
<library>
	<applet name="source">
		<output>
			<like>{id: "", code: core.xml.parseText("")}</like>
		</output>
		<state name="state">
			<all>
				<prop name="id">
					<string/>
				</prop>
				<prop name="source">
					<string/>
				</prop>
			</all>
		</state>
		<content>state.source</content>
		<init id="id" content="source">
			<state>{id: id, source: source}</state>
		</init>
		<respond>
			<input name="input">
				<any>
					<prop name="newcontent">
						<string/>
					</prop>
					<prop name="send"/>
				</any>
			</input>
			<state>
				<calc>
					newstate
					<where>
						<any>
							<all>
								<is>input.send</is>
								<def var="newstate">state</def>
							</all>
							<def var="newstate">{id: id, source: input.newcontent}</def>
						</any>
					</where>
				</calc>
			</state>
			<actions>
				<calc>
					<list>
						<output>{id: state.id, code: core.xml.parseText(state.source)}</output>
					</list>
					<where>
						<is>input.send</is>
					</where>
				</calc>
			</actions>
		</respond>
		<events data="data">
			<change>{newcontent: data}</change>
		</events>
		<accept>
			<from applet="action" data="action-id">{send:}</from>
		</accept>
	</applet>
	<applet name="library">
		<state name="state">
			<all>
				<prop name="id">
					<string/>
				</prop>
				<any>
					<prop name="info">
						<like>core.code.analyze(core.code.self)</like>
					</prop>
					<prop name="none"/>
				</any>
			</all>
		</state>
		<content>
			<calc>
				content
				<where>
					<any>
						<all>
							<is>state.info.errors</is>
							<def var="content">
								<calc>
									<text>
										<table class="analyzer-library">
											<tr class="analyzer-header">
												<td colspan="2">
													<h3>Library contains errors:</h3>
												</td>
											</tr>
											[%core.string.join({parts: errors, sep: "")%]
										</table>
									</text>
									<where>
										<def var="errors">
											<array>
												<size>state.info.errors#</size>
												<item index="i">
													<text>
														<tr>
															<td>
																<span class="glyphicon halflings-alert"></span>
															</td>
															<td>
																<span class="analyzer-errortext">[%state.info.errors[i]%]</span>
															</td>
														</tr>
													</text>
												</item>
											</array>
										</def>
									</where>
								</calc>
							</def>
						</all>
						<def var="content">
							<calc>
								<text>
									<table class="analyzer-library">
										<tr class="analyzer-header">
											<td colspan="2">
												<h3>Applets:</h3>
											</td>
										</tr>
										[%core.string.join({parts: applets, sep: "")%]
									</table>
								</text>
								<where>
									<def var="applets">
										<array>
											<size>state.info.applets#</size>
											<item index="i">
												<text>
													<tr class="analyzer-applet">
														<td>
															<span class="analyzer-appletname">[%state.info.applets[i].name%]</span>
														</td>
														<td>
															<div class="[%classname('applet')]" id="[%state.id%]-applet[%i%]"/>
														</td>
													</tr>
												</text>
											</item>
										</array>
									</def>
								</where>
							</calc>
						</def>
					</any>
				</where>
			</calc>
		</content>
		<init id="id" content="content">
			<state>{id: id, none:}</state>
		</init>
		<respond>
			<input name="code"></input>
			<state>{id: state.id, info: core.code.analyzeLib(code)}</state>
			<actions>
				<list>
					<redraw/>
				</list>
			</actions>
		</respond>
		<accept>
			<from applet="source" data="msg">
				<calc>
					msg.code
					<where>
						<all>
							<def var="libid">
								<text>[%msg.id%]-lib</text>
							</def>
							<is>state.id = libid</is>
						</all>
					</where>
				</calc>
			</from>
		</accept>
	</applet>
	<applet name="action">
		<output>
			<string/>
		</output>
		<state name="state">
			<string/>
		</state>
		<content>
			<invalid>
				<string/>
			</invalid>
		</content>
		<init id="id" content="text">
			<state>{id: id}</state>
		</init>
		<respond>
			<input name="do"><prop name="do"/></input>
			<state>state</state>
			<actions>
				<list>
					<output>state.id</output>
				</list>
			</actions>
		</respond>
		<events>
			<click>{do:}</click>
		</events>
	</applet>
</library>
